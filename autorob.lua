-- This file was protected using Luraph Obfuscator v14.4.1 [https://lura.ph/]

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh)local bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=122,77,75,41,15,97,53,26,52,24,93,94,21,22,25,60,78,69,43,42,64,71,42,18,68,89,17,34,99,60,90,16,44,41,83,26,38,89,13,80,90,14,89,26,39,41,55,85,88,68,81,48 while bh~=75 do if bi<=705 then if bi<=404 then if bi<=216 then if bi<=118 then if bi>85 then do bl=string.byte end bi=157 else bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv=nil bi=118 end else if bi>=178 then if bi>185 then bi=264 cb=string.gsub else bi=216 cg=string.sub end else cj=string.char bi=178 end end else if bi>=357 then if bi<=357 then ci=math.ldexp bi=386 else if bi<397 then do br=(getfenv or function()return _ENV end)end bi=404 else bi=421 bp=setmetatable end end else if bi<=264 then bi=285 cd=string.rep else if bi<317 then bi=324 bt=table.concat else bm=table.insert bi=357 end end end end else if bi>=554 then if bi>=632 then if bi>=661 then if bi>664 then cc={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,n,8,11,10,13,k,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,bg,13,14,15,8,9,10,g,},{5,r,7,e,1,b,3,2,13,bc,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,d,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,m,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,u,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,z,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,f,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,j,10,9,8,7,6,5,bf,3,2,1,0,},nil,nil,nil}bi=753 else cq=cbfunction(b,d,d)return bq[bx(b,i)]end)bi=705 end else for b=0,255 do bq[b]=cj(b);end bi=661 end else if bi<=554 then do co=(unpack or table.unpack)end bi=595 else if bi>598 then bq={}bi=632 else do bx=tonumber end bi=613 end end end else if bi>=469 then if bi<=469 then cs=(function(b,d)if'number'==ce(b)then return true else return false end end)bi=500 else if bi>503 then cf=math.floor bi=554 else bk=math.abs bi=517 end end else if bi<435 then bi=438 ca=select else ce=type bi=469 end end end end else if bi>=1149 then if bi>=1331 then if bi>=1432 then if bi>=1453 then if bi<1468 then bi=1473 return cl(by(br()),{},br())();else bh=75;end else cl=function(b,d,e,f,f)local f,g,i,j,k do j=b[94]end g=b[173]k=b[39]i=b[48]f=bo return function(...)local b,f,m,n,r,u,z,bc,bf do bc=1 end n=-1 r=-1 do f={}end bf={...}do b=(ca('#',...)-1)end m={}do u={}end for r=s,b do if(not(r<i))then f[(r-i)]=bf[(r+1)];else u[r]=bf[(r+1)];end;end;z=(b-i+1)while true do local r,s,z,bg,bh,bk,bm,bp,bq,br bm=k[bc]bh=bm[69]do bq=bm[197]end r=bm[147]bg=bm[91]do br=bm[184]end do bp=bm[78]end z=bm[178]s=bm[83]bk=bm[109]if not(bh<50)then if not(bh<75)then if not(bh<87)then do if not(bh>92)then if not(bh>89)then if not(bm[69]<88)then if(bh<89)then u[r]=(u[s]/g[br]);else do while(u[r]<g[bm[184]])do bc=s;break end end end else u[r]=bo[bg]end else if not(bh>90)then do do do return u[z][bp]end end end else if(bh<92)then bo=u else local bq,bt,bx,cb,cd bx=r bt=br cb=(bx+2)bq={u[bx](u[bx+1],u[cb])}for ce=1,bt do u[(cb+ce)]=bq[ce]end cd=u[(bx+3)]if cd then u[cb]=cd else bc=bm[83];end;end end end else if not(bm[69]<96)then if not(bh>97)then do if not(bm[69]~=96)then local bq,bt bt=r do bq={}end if(#m>0)then do for bx=1,#m do local cb cb=m[bx]for bx=0,#cb do local cd,ce,cf cf=cb[bx]ce=cf[1]cd=cf[2]do if(ce==u and cd>=0)then bq[cd]=ce[cd]cf[1]=bq end end end end end end return co(u,bt,n);else u[bm[147]]=(u[s]-u[br]);end end else if 98==bm[69]then local bq,bt,bx,cb bt=r do bx,cb=bz(u[bt](co(u,(bt+1),s)))end n=(cb+bt-1)bq=0 for cb=bt,n do bq=(bq+1);do u[cb]=bx[bq];end end;else do u[r]=(0~=s);end do bc=(bc+t);end end end else if not(bm[69]>93)then local t t=bm[147]u[t]=u[t](u[t+1]);else if(bh<95)then if not u[r]then bc=s;end;else do n=bm[r];end end end end end end else if not(bh>80)then do if not(bh>77)then if not(bh>75)then bo[r]={}else if(bh>76)then u[bm[147]]=(u[s]^u[br]);else local t,bq,bt do bt=r end do t=u[bt]end bq=u[(bt+2)]if((bq>0))then if((t>u[bt+1]))then do bc=s;end else do u[(bt+3)]=t;end end elseif((t<u[bt+1]))then do bc=s;end else u[(bt+3)]=t;end end end else if not(bh<79)then if(bh>79)then u[r][u[bm[83]]]=u[bm[184]];else local t t=r u[t](u[(t+1)])end else do return u[r]();end;end end end else if not(bh>83)then if not(bh<82)then if(bh>82)then do bc=((g[r]<g[bm[184]])and s or bc)end else u[r]=u[bm[83]]end else local t,bq t=r do bq=u[s]end u[(t+1)]=bq;u[t]=bq[g[br]];end else if not(bh<85)then if(bh>85)then k[bc]={[83]=14,[78]=0,[147]=9,[184]=0,[69]=bm[69]-71};bc=(bc-1);else u[bk]();end else u[r]=(u[s]*g[bm[184]]);end end end end else if not(bh<62)then if not(bm[69]<o)then if not(bh>70)then if not(bh>68)then local o,t do t=r end o={}for bq=1,#m do local bt bt=m[bq]for bq=0,#bt do local bx,cb,cd cb=bt[bq]cd=cb[1]do bx=cb[2]end while cd==u and bx>=t do o[bx]=cd[bx];cb[1]=o;break end end;end;else if 69==bm[69]then do do return u[r]end end else d[s]=u[r];end end else do if not(bm[69]>72)then if(bm[69]>71)then bc=((u[bm[147]]<u[br])and bm[83]or bc)else u[r]=u[bm[83]][g[bm[184]]];end else do if(bh<74)then bc=((g[r]~=g[br])and s or bc)else if u[r]then bc=s;end;end end end end end else do if not(bh>64)then if not(bm[69]>62)then do e[g[s]]=u[r];end else if(bh>63)then do if(not(u[r]==u[br]))then bc=s;end;end else u[bm[147]]=#u[s];end end else do if not(bm[69]>65)then u[bm[147]]=e[g[s]][g[br]];else if(bh<67)then u[r]=(u[s]*u[br]);else u[r]=(u[s]/u[br]);end end end end end end else if not(bh<56)then if not(bh<59)then if not(bh>59)then u[bm[r]]=u else if not(bh~=60)then u[bm[147]]=nil;else local o o=r do do do return u[o](co(u,(o+1),s))end end;end end end else if not(bh<57)then if 57==bh then do if((g[r]<u[br]))then bc=s;end;end else bo[r]=bo[bg]end else u[r][g[s]]=g[br];end end else if not(bh<53)then if not(bh>53)then local o,t t=s o=u[t]for bq=(t+1),br do o=(o..u[bq]);end;u[r]=o;else if 54==bh then do u[r]=u[bm[83]];end else do for o=r,s do u[o]=nil;end;end end end else if not(bh>50)then k[bc]=bu[bm[78]];do bc=s;end else if(bh<52)then local o,t o=r t=s for bq=o,t do do u[bq]=f[(bq-o)];end end;else local f do f=r end do do return co(u,f,(f+s))end;end end end end end end end else if not(bh<25)then if not(bh<37)then if not(bh>42)then if not(bh>39)then if not(bh<38)then if(bh<39)then local f do f=u[bm[178]][bp]end u[z][bp]=(f..u[br]);else g=bo[r](g)end else end else if not(bh>40)then local f,o,t t=r f={u[t](co(u,t+1,s))}o=0 do for z=t,bm[184]do o=(o+1);do u[z]=f[o];end end end else if(bh>41)then e=u[bm[r]]else bc=s;end end end else do if not(bh<46)then if not(bh<be)then if not(bh~=48)then u={};for f=0,b do if(f<i)then u[f]=bf[(f+x)];else do break end end;end;else k[bc]={[83]=11,[78]=0,[184]=0,[147]=1,[69]=bh-34};bc=(bc-1);end else do if not(bm[69]~=46)then local b do b=r end do u[b]=u[b](co(u,b+1,s));end else do k[bc]={[78]=0,[147]=16,[184]=70,[83]=y,[69]=bh-31};end bc=(bc-1);end end end else if not(bm[69]<44)then if(bh>44)then if r then r=false;do br=s;end bc=(bc-1);else bc=(bc+s+br);end else u[bm[147]]=(u[s]+g[br]);end else u[bk]=(function()u[r]=cl(j[bg],nil,e);end)end end end end else if not(bh<31)then if not(bh>33)then if not(bm[69]<32)then if(bh<33)then local b,f,i i=r b=u[(i+2)]f=(u[i]+b)u[i]=f;do if((b>0))then do if(not(f>u[i+1]))then do bc=bm[83];end do u[(i+3)]=f;end end end elseif(not(f<u[i+1]))then do bc=s;end u[(i+3)]=f;end end else u[r]=(u[s]+u[br]);end else u[bm[147]]();end else if not(bh>34)then local b,f,i,o do b=r end i=((br-1)*50)do o=u[b]end f=s for t=bd,f do do o[(i+t)]=u[(b+t)]end end;else if(bh<36)then local b do b={}end if(#m>0)then for f=1,#m do local i i=m[f]for f=0,#i do local o,t,x t=i[f]o=t[1]x=t[2]if(o==u and x>=0)then do b[x]=o[x]end t[1]=b end end end end return bm[r];else u[r]=cl(j[s],nil,e);end end end else if not(bh<28)then if not(bh<29)then if 29==bm[69]then local b do b=r end u[b]=u[b](co(u,b+1,n));else u[r]=-u[s];end else u[r]=d[s];end else if not(bh>25)then else if not(bh~=26)then if((u[r]>u[br]))then do bc=s;end end;else u[bm[109]]=(function()u[r]=cl(j[bg],nil,e);end)end end end end end else if not(bh>11)then if not(bh>5)then if not(bh<3)then do if not(bm[69]<4)then if(bh<5)then while((u[r]~=g[bm[184]]))do bc=s;break end else bo[r]=u[bg]end else u[r]=(not u[s]);end end else if not(bh>0)then bo[r]()else if(bh<2)then if(not(u[r]<u[bm[184]]))then bc=s;end;else local b,d,f d=r b={u[d](co(u,d+1,n))}f=p for i=d,br do f=(f+1);u[i]=b[f];end end end end else if not(bh<9)then if not(bh>9)then u[r]={};else if(bh>10)then local b,d,f f=r b=u[f]d=s for i=1,d do b[i]=u[(f+i)]end;else end end else if not(bh<7)then if 7==bh then k[bc]=bu[bm[78]];bc=bm[83];else local b,d do d=bm[a]end b={}if(#m>0)then for a=1,#m do local f f=m[a]for a=0,#f do local i,j,k k=f[a]i=k[1]j=k[2]if(i==u and j>=0)then b[j]=i[j]k[1]=b end end end end return u[d],u[(d+1)]end else while((u[r]<u[br]))do bc=s;break end end end end else if not(bh<18)then if not(bh<21)then if not(bh>22)then do if(bh<22)then local a,b do b=r end a=u[s]u[(b+1)]=a;u[b]=a[u[br]];else u[r]=u[s][u[br]];end end else do if(bh<24)then local a,b,d,f a=r f,d=bz(u[a](u[(a+1)]))do n=(d+a-c)end b=0 for c=a,n do b=(b+1);u[c]=f[b];end;else u[bm[147]]=bo[bg]end end end else if not(bh<19)then if not(bh~=19)then u[r][g[s]]=u[br];else bc=((g[r]<u[br])and s or bc)end else local a,b a,b=bz(...)for b=w,r do do u[(b-1)]=a[b]end end end end else if not(bh>14)then do if not(bh>12)then do u[r]=(u[s]%g[br]);end else if(bh>13)then if not u[br]then u[r]=u[br];bc=s;end;else u[r]=(u[s]%u[br]);end end end else if not(bh<16)then if(bh<v)then u[r]=g[s]else bc=((u[r]~=u[bm[184]])and s or bc)end else u[r]=e[g[s]];end end end end end end do bc=(bc+1);end end;end;end bi=1453 end else if bi>=1375 then if bi<1403 then bi=1409 do bo={}end else bi=1432 ch={}end else by=function(a,b,b,b)local b,c,d,e,f,g,i,j=97,44,41,55,49,94,69,21,97,54,77,73,94,47,63,59,80,23,47,10,16,47,80,21,58,65 while b~=49 do if c<=308 then if c<=142 then if c>=110 then if c<133 then c=142 j={}else c=182 do g={}end end else if c>49 then c=110 i={}else c=85 d,e,f,g,i,j=nil end end else if c<=227 then if c<218 then d=cp()c=227 else for b=(#bu+1),(#bu+d)do local d,k,m,n,o=87,77,40,88,70,96,53,50,33,20,31,52,87,93,72,54,12,45,74,45,50,50,68,55,43 while d~=54 do if k<=278 then if k<=184 then if k>=137 then if k>145 then o=cp()k=199 else k=184 do m[197]=bw();end end else if k>81 then k=137 m={}else k=114 m,n,o=nil end end else if k>=260 then if k>262 then m[69]=cn(n,1,11);k=306 else k=278 m[44]=cn(o,1,2);end else if k>208 then do m[78]=bw();end k=260 else do n=cp()end k=225 end end end else if k<=400 then if k>=384 then if k<396 then m[184]=cn(o,21,29);k=400 else k=446 m[83]=cn(n,12,33);end else if k>311 then k=384 m[91]=cn(o,12,20);else k=344 m[147]=cn(o,3,11);end end else if k>=497 then if k>504 then d=54;else k=528 bu[b]=m;end else if k>452 then k=497 do m[109]=-m[184]end else k=475 do m[178]=-m[147]end end end end end end end c=275 end else if c>281 then c=325 g[94]=j;else c=308 for b=1,cp()do j[b-1]=by();end end end end else if c<=418 then if c<=369 then if c>333 then c=397 e={}else f=cp()c=369 end else if c<414 then for b=1,f do local d,f,j,k=54,39,15,46,41,30,35,93,23,94,42,81,61,59 while d~=40 do if f<=111 then if f>=69 then if f>72 then do j=nil end f=145 else f=111 k=bw()end else f=69 j,k=nil end else if f>=177 then if f>184 then d=40;else f=204 e[b]=j;end else f=177 if(l==k)then j=(0~=bw());elseif(q==k)then do j=cm();end elseif(not(k~=2))then j=bj();elseif(3==k)then do j=a[bj()];end end;end end end end c=418 else g[173]=e c=442 end end else if c>=530 then if c<=530 then c=549 g[39]=i;else if c<576 then c=582 return g;else break end end else if c<483 then g[48]=bw();c=489 else for a=1,cp()do local b,d,e,f,g,j=87,68,39,71,99,69,31,57,24,35,14,44,29,41,85,75,29,37,23,74,55,45,88,54,52,68,42 while b~=55 do if d<=330 then if d<=170 then if d<=111 then if d<109 then e,f,g,j=nil d=111 else e={{},nil,nil,nil}d=129 end else if d>133 then do e[161]={};end d=205 else e[197]=bw();d=170 end end else if d<=229 then if d>207 then d=257 j=cp()else d=229 if not(bw()~=ba)then for k=1,bw()do do e[161][k]={bw()==0,cp()}end end end end else if d>=302 then if d>305 then e[44]=g d=374 else g=cn(j,1,2)d=330 end else d=302 f=cp()end end end else if d<=483 then if d>=453 then if d>461 then d=527 e[184]=cn(j,21,29);else d=483 e[83]=cn(f,12,33);end else if d<399 then d=407 e[69]=cn(f,1,11);else e[147]=cn(j,3,11);d=453 end end else if d<=568 then if d>533 then e[178]=-e[147]d=615 else d=568 e[78]=cn(j,h,20);end else if d>=661 then if d<693 then d=697 i[a]=e;else b=55;end else e[109]=-e[184]d=661 end end end end end end c=530 end end end end end end bi=1375 end end else if bi>=1213 then if bi>=1259 then if bi<1301 then do bz=function(...)return{...},ca('#',...)end end bi=1308 else do bu={}end bi=1331 end else do bj=function(a,a)local a,b,c,d=84,32,51,47,59,87,69,68,56,68,83,91,50,78,69 while a~=38 do if b>=142 then if b>=168 then if b>176 then break else b=213 return c;end else bs=(bs+d);b=168 end else if b>=56 then if b<102 then do d=cp()end b=105 else b=142 do c=cq:sub(bs,(bs+d-1))end end else b=56 c,d=nil end end end end end bi=1259 end else if bi>1158 then bi=1213 cm=function()local a,b,c,d,e,f,g,h=62,41,86,66,37,21,18,97,28,40,93,62,30,86,50,86,61,63,51 while a~=43 do if b<=148 then if b<=67 then if b<59 then c,d,e,f,g,h=nil b=67 else b=93 d=cp()end else if b>=130 then if b<146 then b=148 while((d==0 and f==0))do return 0 end else g=((-1)^bv(31,f,1))b=194 end else b=130 f=cp()end end else if b<=249 then if b<=194 then b=231 do e=bv(20,f,11)end else if b<245 then b=249 do h=(bv(0,f,20)*4294967296+d)end else b=278 c=1 end end else if b>=315 then if b>318 then a=43;else b=356 return(g*(2^(e-1023))*(h/ck+c))end else if not(e~=0)then if not(h==0)then e=1 do c=0 end else return(g*0)end elseif not(e==2047)then else if 0==h then do do return(g*(0/0))end end else return(g*(1/0))end end b=315 end end end end end else do cr=function()local a,b a,b=bl(cq,bs,(bs+2))bs=(bs+2);return((b*256)+a);end end bi=1169 end end end else if bi<=912 then if bi<=785 then if bi>756 then bi=832 ck=(2^52)else ct=''bi=785 end else if bi>=875 then if bi<904 then bi=912 bn=2 else for a=1,31 do cv[a]=bn do bn=(bn*2)end end bi=953 end else bi=875 cv={[0]=1}end end else if bi>=1049 then if bi<=1049 then bi=1072 bs=bb else if bi<1110 then cp=function()local a,b,c,d d,b,c,a=bl(cq,bs,(bs+3))do bs=(bs+4);end return((a*16777216)+(c*65536)+(b*256)+d);end bi=1119 else bw=function()local a a=bl(cq,bs,bs)bs=(bs+1);return a;end bi=1149 end end else if bi>=984 then if bi<1029 then do cu=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+cc[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end bi=1033 else bi=1049 do cn=function(a,b,c,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end end else bv=function(a,b,c,d,d,d)local d,e,f=51,59,57,46,29,98,20,32,13,22,78,79 while d~=29 do if e<=127 then if e>=83 then if e>87 then f=((b/cv[a])%cv[c])e=157 else f=nil e=127 end else e=83 f=nil end else if e<=157 then e=184 f=(f-f%1)else if e<196 then e=199 return f else d=29;end end end end end bi=984 end end end end end end end)(147,0,1,3,6,1,11,12,16,11,12,4,15,9,68,0,0,4,0,1,3,17,1,1,18,0,1,1,12,1,48,4,12)
